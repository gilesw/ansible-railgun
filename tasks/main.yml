---
- include: "{{ ansible_os_family }}.yml"

- name: source public ip to allow default activation.railgun_host to be set
  ipify_facts:

- name: ensure {{ role_name }} packages are installed
  package:
    name: "{{ item.key }}{{ item.value.version | default('') }}"
    state: present
  with_dict: "{{ railgun_packages }}"

- name: copy files
  copy:
    src: "{{ item.value.src | default(railgun_copy_src) }}"
    dest: "{{ item.value.dest | default(railgun_copy_dest) }}"
    directory_mode: "{{ item.value.directory_mode | default(railgun_copy_directory_mode) }}"
    owner: "{{ item.value.owner | default(railgun_copy_owner)}}"
    group: "{{ item.value.group | default(railgun_copy_group) }}"
    mode: "{{ item.value.mode | default(railgun_copy_mode)}}"
    remote_src: "{{ item.value.remote_src | default(railgun_copy_remote_src)}}"
    force: "{{ item.value.force | default(railgun_copy_force)}}"
    content: "{{ item.value.content | default(railgun_copy_content)}}"
  notify: "{{ item.value.notify | default(railgun_copy_notify) }}"
  with_dict: "{{ railgun_copy }}"
  register: copy

- name: template files
  template:
    src: "{{ item.value.src }}"
    dest: "{{ item.value.dest }}"
    directory_mode: "{{ item.value.directory_mode | default(railgun_template_directory_mode) }}"
    owner: "{{ item.value.owner | default(railgun_template_owner)}}"
    group: "{{ item.value.group | default(railgun_template_group) }}"
    mode: "{{ item.value.mode | default(railgun_template_mode)}}"
  notify: "{{ item.value.notify | default(railgun_template_notify) }}"
  with_dict: "{{ railgun_template }}"

- assert: { that: "railgun_activation_token != 'unset'" }

- name: "start {{ role_name }} service and optionally rg-watcher"
  service:
    name: "{{ item.key }}"
    state: "{{ item.value.state | default(railgun_service_state) }}"
    enabled: "{{ item.value.enabled | default(railgun_service_enabled) }}"
  with_dict: "{{ railgun_service }}"
